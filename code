#predicting a students final score based on different attributes 
import csv
%matplotlib inline
import os
import tqdm
import time
import torch
import pickle
import numpy as np
from torch import nn
import torch.nn.functional as F
import matplotlib.pyplot as plt
from torch.utils.data import TensorDataset,DataLoader
import pandas as pd
import array
import sklearn
from sklearn import linear_model
from sklearn.model_selection import train_test_split
savePath = 'project 2/'
if not os.path.isdir(savePath):
    os.makedirs(savePath)

        
#reading the files
file1="student-mat.xls"
file2="student-por.xls"
    
#  taking few attributes form the data 

data1 = pd.read_excel(file1)
data2 = pd.read_excel(file2) 

data1=data1[["G1","G2","G3","studytime","failures","absences","Dalc","Walc"]] # maths
data2=data2[["G1","G2","G3","studytime","failures","absences","Dalc","Walc"]] # portuguese

predict1="G3"  #target  for portuguese
predict2="G3" # target for portuguese

# using linear regression model from sklearn and training

#for maths
x1=np.array(data1.drop([predict1],1))
y1=np.array(data1[predict1])
x1_train,x1_test,y1_train,y1_test= sklearn.model_selection.train_test_split(x1,y1,test_size = 0.1)
linear_maths=linear_model.LinearRegression()


# for portuguese
x2=np.array(data2.drop([predict2],1))
y2=np.array(data2[predict2])
x2_train,x2_test,y2_train,y2_test= sklearn.model_selection.train_test_split(x2,y2,test_size = 0.1)
linear_por=linear_model.LinearRegression()

# testing  and calculating the accuracy of the model



linear_maths.fit(x1_train,y1_train)
acc_maths= linear_maths.score(x1_test,y1_test)



linear_por.fit(x2_train,y2_train)
acc_por= linear_maths.score(x2_test,y2_test)


print("the accuracy in of the maths model is ", acc_maths*100,"% \nthe accuracy of the portuguese model is ", acc_por*100,"%")    
